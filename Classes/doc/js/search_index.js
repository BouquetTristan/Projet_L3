var search_data = {"index":{"searchIndex":["aide","boutonaide","boutonaideherbe","boutonaidetente","boutonaideverif","boutongrille","boutongrillea","boutonsaison","case","chrono","chronoinverse","grille","header","score","texteafficher","affichergrille()","aide()","aide()","aide()","ajouterb()","arbreangleherbe()","arbretenteplacer()","cajout()","cfin()","cfin()","cpause()","cpause()","craz()","craz()","cretire()","cstart()","cstart()","calculerscore()","caseestdelherbe()","casesvoisines()","casesvoisinescomplet()","changeretat()","charger()","chgetat()","chgetat()","colonnecompleterherbes()","colonneplacertentes()","creer()","creer()","creer()","creer()","creerd()","debloquer()","enregistrerfichier()","erreur()","indiqueraide()","indiqueraide()","jouercase()","lancer()","lignecompleterherbes()","ligneplacertentes()","mbouton()","mbouton()","mcoord()","mcoord()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","observateur()","parcourirc()","parcourirh()","parcourirl()","prix()","tentecontourcompleter()","tentesplacer()","to_s()","to_s()","to_s()","triscores()"],"longSearchIndex":["aide","boutonaide","boutonaideherbe","boutonaidetente","boutonaideverif","boutongrille","boutongrillea","boutonsaison","case","chrono","chronoinverse","grille","header","score","texteafficher","grille#affichergrille()","boutonaideherbe#aide()","boutonaidetente#aide()","boutonaideverif#aide()","header#ajouterb()","aide::arbreangleherbe()","aide::arbretenteplacer()","chrono#cajout()","chrono#cfin()","chronoinverse#cfin()","chrono#cpause()","chronoinverse#cpause()","chrono#craz()","chronoinverse#craz()","chronoinverse#cretire()","chrono#cstart()","chronoinverse#cstart()","score#calculerscore()","aide::caseestdelherbe()","case#casesvoisines()","case#casesvoisinescomplet()","case#changeretat()","grille::charger()","boutongrille#chgetat()","boutongrillea#chgetat()","aide::colonnecompleterherbes()","aide::colonneplacertentes()","case::creer()","grille::creer()","score::creer()","texteafficher::creer()","grille::creerd()","boutonsaison#debloquer()","grille#enregistrerfichier()","aide::erreur()","boutongrille#indiqueraide()","boutongrillea#indiqueraide()","case#jouercase()","boutonsaison#lancer()","aide::lignecompleterherbes()","aide::ligneplacertentes()","boutongrille#mbouton()","boutongrillea#mbouton()","boutongrille#mcoord()","boutongrillea#mcoord()","boutonaide::new()","boutonaideherbe::new()","boutonaidetente::new()","boutongrille::new()","boutongrillea::new()","boutonsaison::new()","case::new()","chrono::new()","chronoinverse::new()","grille::new()","header::new()","score::new()","texteafficher::new()","grille#observateur()","grille#parcourirc()","grille#parcourirh()","grille#parcourirl()","boutonaideverif#prix()","aide::tentecontourcompleter()","aide::tentesplacer()","case#to_s()","chrono#to_s()","chronoinverse#to_s()","score::triscores()"],"info":[["Aide","","Aide.html","","<p>La classe Aide contient des méthodes qui évaluent l&#39;état de la grille du joueur\n"],["BoutonAide","","BoutonAide.html","","<p>La classe BoutonAide représente la classe mère de tous les autres boutons aides\n"],["BoutonAideHerbe","","BoutonAideHerbe.html","","<p>La classe BouonAideHerbe hérite de la classe BoutonAide et répésente une aide spécifique aux herbes\n"],["BoutonAideTente","","BoutonAideTente.html","","<p>La classe BOutonAideTente hérite de la classe BoutonAide et représente une aide spécifique aux tentes …\n"],["BoutonAideVerif","","BoutonAideVerif.html","","<p>La classe BoutonAideVerif hérite de la classe BoutonAide et va chercher une erreur sur le grille de jeu …\n"],["BoutonGrille","","BoutonGrille.html","","<p>La classe BoutonGrilleA caractéise la grille de jeu représenter à l&#39;aide de bouton en guise de case …\n"],["BoutonGrilleA","","BoutonGrilleA.html","","<p>La classe BoutonGrilleA caractéise la grille de jeu représenter à l&#39;aide de bouton en guise de case …\n"],["BoutonSaison","","BoutonSaison.html","","<p>La classe BoutonSaison représente les boutons de l&#39;interface sur la section aventure\n"],["Case","","Case.html","","<p>une case est definit par sa position dans la grille de jeu et son etat\n"],["Chrono","","Chrono.html","","<p>La classe chrono représente un chronomètre conçu pour être utilisé en thread ( en parallèle du programme …\n"],["ChronoInverse","","ChronoInverse.html","","<p>La classe chronoInverse représente un compte à rebours conçu pour être utilisé en thread ( en parallèle …\n"],["Grille","","Grille.html","","<p>La classe grille contient des informations relatives à une grille, ainsi qu&#39;une grille actuelle et …\n"],["Header","","Header.html","",""],["Score","","Score.html","","<p>La Classe Score définie les critère de calcul du score en fonction de la grille etc\n"],["TexteAfficher","","TexteAfficher.html","",""],["afficherGrille","Grille","Grille.html#method-i-afficherGrille","(grille)","<p>Affiche la grille de jeu (sans le nombre de tentes)\n\n<pre>@param grille                //Grille de jeu\n@return ...</pre>\n"],["aide","BoutonAideHerbe","BoutonAideHerbe.html#method-i-aide","(uneGrille, unLabel, unJoueur, interfaceGrille)","<p>Définie la marche à suivre en cas d&#39;appel d&#39;aide sur le bouton\nherbe\n\n<pre>@param uneGrille    //la ...</pre>\n"],["aide","BoutonAideTente","BoutonAideTente.html#method-i-aide","(uneGrille, unLabel, unJoueur, interfaceGrille)","<p>Définie la marche à suivre en cas d&#39;appel d&#39;aide sur le bouton\ntente\n\n<pre>@param uneGrille    //la ...</pre>\n"],["aide","BoutonAideVerif","BoutonAideVerif.html#method-i-aide","(uneGrille, unLabel, unJoueur, interfaceGrille)","<p>Définie la marche à suivre en cas d&#39;appel d&#39;aide sur le bouton\nverif\n\n<pre>@param uneGrille    //la ...</pre>\n"],["ajouterB","Header","Header.html#method-i-ajouterB","()",""],["arbreAngleHerbe","Aide","Aide.html#method-c-arbreAngleHerbe","(grille)","<p>Vérifie si un des angles de chaque arbre est obligatoirement de l&#39;herbe\n\n<pre>@param grille             ...</pre>\n"],["arbreTentePlacer","Aide","Aide.html#method-c-arbreTentePlacer","(grille)","<p>Vérifie pour chaque arbre si il ne reste qu&#39;une possibilité pour placer\nune tente\n\n<pre>@param grille   ...</pre>\n"],["cAjout","Chrono","Chrono.html#method-i-cAjout","(n)","<p>ajoute n seconde au chrono\n\n<pre>@param n             //nombre de secondes à ajouter au chrono\n@return void ...</pre>\n"],["cFin","Chrono","Chrono.html#method-i-cFin","()","<p>met la variable @fin sur true ce qui à pour effet de mettre un terme au\nchrono\n\n<pre>@param void          //ne ...</pre>\n"],["cFin","ChronoInverse","ChronoInverse.html#method-i-cFin","()","<p>met la variable @fin sur true ce qui à pour effet de mettre un terme au\nchrono\n\n<pre>@param void          //ne ...</pre>\n"],["cPause","Chrono","Chrono.html#method-i-cPause","()","<p>change la valeur de la variable @pause en true ou en false mettant le\nchrono en pause ou le faisant repartir …\n"],["cPause","ChronoInverse","ChronoInverse.html#method-i-cPause","()","<p>change la valeur de la variable @pause en true ou en false mettant le\nchrono en pause ou le faisant repartir …\n"],["cRaz","Chrono","Chrono.html#method-i-cRaz","()","<p>relance le chrono dans sa configuration initiale\n\n<pre>@param void          //ne prend aucun paramètre\n@return ...</pre>\n"],["cRaz","ChronoInverse","ChronoInverse.html#method-i-cRaz","()","<p>relance le chrono dans sa configuration initiale\n\n<pre>@param void          //ne prend aucun paramètre\n@return ...</pre>\n"],["cRetire","ChronoInverse","ChronoInverse.html#method-i-cRetire","(n)","<p>retire n seconde au chrono\n\n<pre>@param void          //le nombre de scondes à retirer\n@return void         ...</pre>\n"],["cStart","Chrono","Chrono.html#method-i-cStart","()","<p>lance le chrono qui se terminera uniquement en appelant la méthode fin()\n\n<pre>@param void          //ne prend ...</pre>\n"],["cStart","ChronoInverse","ChronoInverse.html#method-i-cStart","()","<p>lance le chrono qui se terminera uniquement en appelant la méthode fin()\n\n<pre>@param void          //ne prend ...</pre>\n"],["calculerScore","Score","Score.html#method-i-calculerScore","(tempsRestant)","<p>Calcule le score en fonction de la difficulté, du temps restant et du\nnombre de feuilles restantes\n\n<pre>@param ...</pre>\n"],["caseEstDeLHerbe","Aide","Aide.html#method-c-caseEstDeLHerbe","(grille)","<p>Vérifie si une case n&#39;est pas adjacente à un arbre\n\n<pre>@param grille        //La grille de jeu\n@return ...</pre>\n"],["casesVoisines","Case","Case.html#method-i-casesVoisines","(grille)","<p>Renvoie un tableau contenant les cases adjacentes de la case\n\n<pre>@param grille    //Prend en paramètre la ...</pre>\n"],["casesVoisinesComplet","Case","Case.html#method-i-casesVoisinesComplet","(grille)","<p>Renvoie un tableau contenant les cases voisines de la case\n\n<pre>@param grille //Prend en paramètre la grille ...</pre>\n"],["changerEtat","Case","Case.html#method-i-changerEtat","(etat)","<p>Cette méthode est destiné à la programmation, elle consiste à forcer\nl&#39;état d&#39;une case\n\n<pre>@param ...</pre>\n"],["charger","Grille","Grille.html#method-c-charger","(nomJoueur, mode)","<p>Charge une grille sauvegardée lors d&#39;une partie\n\n<pre>@param nomJoueur    //Le nom du joueur\n@param mode ...</pre>\n"],["chgEtat","BoutonGrille","BoutonGrille.html#method-i-chgEtat","(etat)","<p>Change l&#39;état du bouton (case) pour adopter l&#39;image correspondante\n\n<pre>@param etat          //Etat ...</pre>\n"],["chgEtat","BoutonGrilleA","BoutonGrilleA.html#method-i-chgEtat","(etat)","<p>Change l&#39;image du bouton en fonction de l&#39;état\n\n<pre>@param etat          //un chiffre représentant ...</pre>\n"],["colonneCompleterHerbes","Aide","Aide.html#method-c-colonneCompleterHerbes","(grille)","<p>Parcourt chaque colonne de la grille du joueur et repère les colonnes qui\ndoivent être remplies par des …\n"],["colonnePlacerTentes","Aide","Aide.html#method-c-colonnePlacerTentes","(grille)","<p>Vérifie si il est possible de placer au moins une tente dans la ligne\n\n<pre>@param grille                //Prend ...</pre>\n"],["creer","Case","Case.html#method-c-creer","(x,y, etat)","<p>methode de classe pour creer des objets case\n\n<pre>@param x     //Coordonnée x d&#39;une case\n@param y     //Coordonnée ...</pre>\n"],["creer","Grille","Grille.html#method-c-creer","(diff, num)","<p>Créé une grille avec une difficulté et un numéro\n\n<pre>@param diff          //difficulté de grille\n@param num ...</pre>\n"],["creer","Score","Score.html#method-c-creer","(diff, nbF)","<p>Création d&#39;un score\n\n<pre>@param diff          //difficulté de la grille\n@param nbF           //nombre de ...</pre>\n"],["creer","TexteAfficher","TexteAfficher.html#method-c-creer","(unTexte, unAffichage)",""],["creerD","Grille","Grille.html#method-c-creerD","(diff)","<p>Créé une grille avec un niveau de difficulté\n\n<pre>@param diff          //difficulté de grille\n@return void ...</pre>\n"],["debloquer","BoutonSaison","BoutonSaison.html#method-i-debloquer","(unJoueur)",""],["enregistrerFichier","Grille","Grille.html#method-i-enregistrerFichier","(nomJoueur, mode)","<p>Enregistre la grille dans un fichier en transformant les informations\nconcernant l&#39;état des case …\n"],["erreur","Aide","Aide.html#method-c-erreur","(grille)","<p>Parcourt la grille du joueur et la grille finale pour repérer les erreurs\nde placement\n\n<pre>@param grille  ...</pre>\n"],["indiquerAide","BoutonGrille","BoutonGrille.html#method-i-indiquerAide","(etat)",""],["indiquerAide","BoutonGrilleA","BoutonGrilleA.html#method-i-indiquerAide","(etat)","<p>Va checher l&#39;image modifier avec un encadré rouge pour indiquer une\nerreur\n\n<pre>@param etat          //un ...</pre>\n"],["jouerCase","Case","Case.html#method-i-jouerCase","()","<p>correspond au changement d&#39;etat dans une case au moment ou on joue la\ncase  0-&gt;3 / 1-&gt;0 / 2-&gt;2 …\n"],["lancer","BoutonSaison","BoutonSaison.html#method-i-lancer","(uneApp, unHeader, unePrecedente, unJoueur)",""],["ligneCompleterHerbes","Aide","Aide.html#method-c-ligneCompleterHerbes","(grille)","<p>Parcourt chaque ligne de la grille du joueur et repère les lignes qui\ndoivent être remplies par des herbes …\n"],["lignePlacerTentes","Aide","Aide.html#method-c-lignePlacerTentes","(grille)","<p>Vérifie si il est possible de placer au moins une tente dans la ligne\n\n<pre>@param grille                //Prend ...</pre>\n"],["mBouton","BoutonGrille","BoutonGrille.html#method-i-mBouton","(valeur)","<p>Attribut une valeur au bouton (label)\n\n<pre>@param valeur                //une valeur à afficher\n@return void ...</pre>\n"],["mBouton","BoutonGrilleA","BoutonGrilleA.html#method-i-mBouton","(valeur)","<p>Attribut une valeur au bouton (label)\n\n<pre>@param valeur                //une valeur à afficher\n@return void ...</pre>\n"],["mCoord","BoutonGrille","BoutonGrille.html#method-i-mCoord","(i,j)","<p>Détermine les coordonnées du bouton  (case)\n\n<pre>@param i             //coordonée abscisse\n@param j        ...</pre>\n"],["mCoord","BoutonGrilleA","BoutonGrilleA.html#method-i-mCoord","(i,j)","<p>Détermine les coordonnées du bouton  (case)\n\n<pre>@param i             //coordonée abscisse\n@param j        ...</pre>\n"],["new","BoutonAide","BoutonAide.html#method-c-new","(uneValeur, cliquable)","<p>Initialize le bouton\n\n<pre>@param uneValeur    //Le nom du label\n@param cliquable    //Booléen\n@return void ...</pre>\n"],["new","BoutonAideHerbe","BoutonAideHerbe.html#method-c-new","(uneValeur, cliquable)","<p>Initialize le bouton\n\n<pre>@param uneValeur    //Le nom du label\n@param cliquable    //Booléen\n@return void ...</pre>\n"],["new","BoutonAideTente","BoutonAideTente.html#method-c-new","(uneValeur, cliquable)","<p>Initialize le bouton\n\n<pre>@param uneValeur    //Le nom du label\n@param cliquable    //Booléen\n@return void ...</pre>\n"],["new","BoutonGrille","BoutonGrille.html#method-c-new","()","<p>Initialise le bouton (case)\n\n<pre>@param void          //ne prend aucun paramètre\n@return void         //ne ...</pre>\n"],["new","BoutonGrilleA","BoutonGrilleA.html#method-c-new","(chemin)","<p>Initialise le bouton (case)\n\n<pre>@param chemin                //Le chemin d&#39;accès du dossier contenant les ...</pre>\n"],["new","BoutonSaison","BoutonSaison.html#method-c-new","(uneSaison, cliquable)","<p>@bouton @coordI, @coordJ @@prix : prix de l&#39;aide en feuille\n"],["new","Case","Case.html#method-c-new","(x,y, etat)","<p>reçoit une position et un état\n\n<pre>@param x     //Coordonnée x d&#39;une case\n@param y     //Coordonnée y d&#39;une ...</pre>\n"],["new","Chrono","Chrono.html#method-c-new","()","<p>initialise les variables à 0 et a false\n\n<pre>@param void          //ne prend aucun paramètre\n@return void  ...</pre>\n"],["new","ChronoInverse","ChronoInverse.html#method-c-new","(temps)","<p>initialise les variables à 0 et a false et mémorise le temps initial dans\nla variable @initialize\n\n<pre>@param ...</pre>\n"],["new","Grille","Grille.html#method-c-new","(diff, num)","<p>Méthode d&#39;initialisation\n\n<pre>@param diff          //difficulté de grille\n@param num           //numéro ...</pre>\n"],["new","Header","Header.html#method-c-new","(monApp)",""],["new","Score","Score.html#method-c-new","(diff, nbF)","<p>Initialisation\n\n<pre>@param diff          //difficulté de la grille\n@param nbF           //nombre de feuille ...</pre>\n"],["new","TexteAfficher","TexteAfficher.html#method-c-new","(unTexte, unAffichage)",""],["observateur","Grille","Grille.html#method-i-observateur","()","<p>Observateur pour savoir si l&#39;utilisateur a gagner\n\n<pre>@param void          //ne prend aucun paramètre ...</pre>\n"],["parcourirC","Grille","Grille.html#method-i-parcourirC","()","<p>Parcours par colonne de la grille\n\n<pre>@param void         //ne prend aucun paramètre\n@return void         ...</pre>\n"],["parcourirH","Grille","Grille.html#method-i-parcourirH","()","<p>Parcours horizonta par case de la grille\n\n<pre>@param void         //ne prend aucun paramètre\n@return void  ...</pre>\n"],["parcourirL","Grille","Grille.html#method-i-parcourirL","()","<p>Parcours par ligne de la grille\n\n<pre>@param void         //ne prend aucun paramètre\n@return void           ...</pre>\n"],["prix","BoutonAideVerif","BoutonAideVerif.html#method-i-prix","()",""],["tenteContourCompleter","Aide","Aide.html#method-c-tenteContourCompleter","(grille)","<p>Vérifie si les cases autour des tentes sont complétées\n\n<pre>@param grille                //Prend la grille ...</pre>\n"],["tentesPlacer","Aide","Aide.html#method-c-tentesPlacer","(grille, ligne, nLigne)","<p>Vérifie si le nombre de tente placable maximum sur la ligne est égale aux\nnombres de tentes restantes …\n"],["to_s","Case","Case.html#method-i-to_s","()","<p>methode pour retourner une case (son Etat)\n\n<pre>@param void    //Ne prend aucun paramètre\n@return etat    //Renvoie ...</pre>\n"],["to_s","Chrono","Chrono.html#method-i-to_s","()","<p>Traduction des secondes en heures/minutes/secondes\n\n<pre>@param void          //ne prend aucun paramètre\n@return ...</pre>\n"],["to_s","ChronoInverse","ChronoInverse.html#method-i-to_s","()","<p>Traduction des secondes en heures/minutes/secondes\n\n<pre>@param void          //ne prend aucun paramètre\n@return ...</pre>\n"],["triScores","Score","Score.html#method-c-triScores","(tabScores)","<p>Tri les scores par ordre décroissant\n\n<pre>@param tabScores             //tableau comportant les scores\n@return ...</pre>\n"]]}}